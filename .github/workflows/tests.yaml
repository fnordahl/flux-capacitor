name: Discovery

on:
  push:
  pull_request:

jobs:
  other:
    runs-on: ubuntu-20.04
    steps:
      - name: hello
        run: |
          echo "Hello, world!"
  test:
    env:
      dependencies: |
        dkms
      kernel_ver: 5.13
    runs-on: [self-hosted, ubuntu-21.10]
    steps:
      - name: checkout self
        uses: actions/checkout@v2

      - name: build dependencies
        run: |
          set -euxo pipefail
          sudo sed -ie 's/^# deb-src/deb-src/' /etc/apt/sources.list
          sudo apt update
          sudo apt -y build-dep iproute2

      - name: linux tarball
        run: |
          set -euxo pipefail
          wget -q https://mirrors.edge.kernel.org/pub/linux/kernel/v5.x/linux-${{ env.kernel_ver }}.tar.gz
          tar -xzf linux-${{ env.kernel_ver }}.tar.gz

      - name: patch and prepare dkms sources
        run: |
          for f in $(ls -1 *.patch); do
              patch -d linux-${{ env.kernel_ver }} -p1 < $f
          done
          sudo cp -pR linux-${{ env.kernel_ver }}/drivers/net/netdevsim /usr/src/netdevsim-${{ env.kernel_ver }}

      - name: create dkms.conf
        run: |-
          sudo cat << EOF > /usr/src/netdevsim-${{ env.kernel_ver }}/dkms.conf
          PACKAGE_NAME="netdevsim"
          PACKAGE_VERSION="${{ env.kernel_ver }}"
          BUILT_MODULE_NAME[0]="netdevsim"
          DEST_MODULE_LOCATION[0]="/kernel/drivers/net/netdevsim/"
          AUTOINSTALL="yes"
          EOF

      - name: dependencies
        run: |
          set -euxo pipefail
          sudo apt update
          sudo apt -y install ${{ env.dependencies }}

      - name: dkms
        run: |
          set -euxo pipefail
          sudo dkms add netdevsim/${{ env.kernel_ver }}
          sudo dkms build netdevsim/${{ env.kernel_ver }} \
              || (cat /var/lib/dkms/netdevsim/${{ env.kernel_ver }}/build/make.log \
                  && false)
          sudo dkms install netdevsim/${{ env.kernel_ver }}

      - name: build iproute2
        run: |
          set -euxo pipefail
          git clone \
              https://git.kernel.org/pub/scm/network/iproute2/iproute2.git
          cd iproute2
          ./configure
          make -j4

      - name: devlink
        run: |
          set -euxo pipefail
          DEVLINK=iproute2/devlink/devlink
          sudo modprobe netdevsim
          sudo sh -c 'echo "10 1" > /sys/bus/netdevsim/new_device'
          sudo sh -c 'echo 4 > /sys/class/net/eni10np0/device/sriov_numvfs'
          sudo $DEVLINK dev eswitch set netdevsim/netdevsim10 mode switchdev
          sudo $DEVLINK port show
          sudo modprobe -r netdevsim
